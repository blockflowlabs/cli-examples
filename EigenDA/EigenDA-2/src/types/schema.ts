// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { Document } from "@blockflow-labs/utils";

export class Batch {
  static entity = "Batch";
  static schema = {
    id: { type: "String", index: true },
    batchId: "string",
    batchHeaderHash: "string",
    gasFees: "string",
    blockNumber: "string",
    blockTimestamp: "string",
    transactionHash: "string",
    batchHeader: {
      id: "String",
      blobHeadersRoot: "string",
      quorumNumbers: "number[]",
      signedStakeForQuorums: "number[]",
      referenceBlockNumber: "number",
    },
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

export class GasFees {
  static entity = "GasFees";
  static schema = {
    id: { type: "String", index: true },
    gasUsed: "string",
    gasPrice: "string",
    transactionFee: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

export class NewPubKeyRegistration {
  static entity = "NewPubKeyRegistration";
  static schema = {
    id: { type: "String", index: true },
    operator: "string",
    pubkeyG1_X: "number",
    pubkeyG1_Y: "number",
    pubkeyG2_X: "number",
    pubkeyG2_Y: "number",
    blockNumber: "number",
    blockTimestamp: "string",
    transactionHash: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

export class OperatorAddedToQuorum {
  static entity = "OperatorAddedToQuorum";
  static schema = {
    id: { type: "String", index: true },
    operator: "string",
    quorumNumbers: "string",
    blockNumber: "number",
    blockTimestamp: "string",
    transactionHash: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

export class OperatorRemovedFromQuorum {
  static entity = "OperatorRemovedFromQuorum";
  static schema = {
    id: { type: "String", index: true },
    operator: "string",
    quorumNumbers: "string",
    blockNumber: "number",
    blockTimestamp: "string",
    transactionHash: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

import { String } from "@blockflow-labs/utils";

export interface IBatch extends Document {
  id: String;
  batchId: string;
  batchHeaderHash: string;
  gasFees: string;
  blockNumber: string;
  blockTimestamp: string;
  transactionHash: string;
  batchHeader: BatchHeader;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}
//issue in operator ID, how do ifetch it and nonsigners data too
//is it the same from operatorregistry
export interface IGasFees extends Document {
  id: String;
  gasUsed: string;
  gasPrice: string;
  transactionFee: string;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

export type BatchHeader = {
  id: String;
  blobHeadersRoot: string;
  quorumNumbers: number[];
  signedStakeForQuorums: number[];
  referenceBlockNumber: number;
};

export interface INewPubKeyRegistration extends Document {
  id: String;
  operator: string;
  pubkeyG1_X: number;
  pubkeyG1_Y: number;
  pubkeyG2_X: number;
  pubkeyG2_Y: number;
  blockNumber: number;
  blockTimestamp: string;
  transactionHash: string;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

export interface IOperatorAddedToQuorum extends Document {
  id: String;
  operator: string;
  quorumNumbers: string;
  blockNumber: number;
  blockTimestamp: string;
  transactionHash: string;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

export interface IOperatorRemovedFromQuorum extends Document {
  id: String;
  operator: string;
  quorumNumbers: string;
  blockNumber: number;
  blockTimestamp: string;
  transactionHash: string;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { Document } from "@blockflow-labs/utils";

export class Transfer {
  static entity = "Transfer";
  static schema = {
    id: { type: "String", index: true },
    from_address: "string",
    to_address: "string",
    token_address: "string",
    token_name: "string",
    token_symbol: "string",
    raw_amount: "Number",
    raw_amount_str: "string",
    amount: "Number",
    amount_str: "string",
    usd_amount: "Number",
    usd_exchange_rate: "string",
    transfer_type: "string",
    transaction_from_address: "string",
    transaction_to_address: "string",
    transaction_hash: "string",
    log_index: "string",
    block_timestamp: "string",
    block_hash: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

export class Balance {
  static entity = "Balance";
  static schema = {
    id: { type: "String", index: true },
    address: "string",
    token_address: "string",
    token_name: "string",
    token_symbol: "string",
    balance: "string",
    raw_balance: "string",
    usd_amount: "string",
    usd_exchange_rate: "string",
    block_timestamp: "string",
    block_hash: "string",
    is_past_holder: "Boolean",
    is_holder: "Boolean",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

export class Token {
  static entity = "Token";
  static schema = {
    id: { type: "String", index: true },
    address: "string",
    decimals: "string",
    name: "string",
    symbol: "string",
    holder_count: "string",
    burn_event_count: "string",
    mint_event_count: "string",
    transfer_event_count: "string",
    total_supply: "string",
    total_burned: "string",
    total_minted: "string",
    total_transferred: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

export class BridgeLimitsSet {
  static entity = "BridgeLimitsSet";
  static schema = {
    id: { type: "String", index: true },
    mintingLimit: "Number",
    burningLimit: "Number",
    bridge: "string",
    block_timestamp: "string",
    block_hash: "string",
    block_number: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

export class LockBoxSet {
  static entity = "LockBoxSet";
  static schema = {
    id: { type: "String", index: true },
    lockboxaddress: "string",
    block_timestamp: "string",
    block_hash: "string",
    block_number: "string",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

export class LockBoxData {
  static entity = "LockBoxData";
  static schema = {
    id: { type: "String", index: true },
    lockboxaddress: "string",
    senderAccount: "string",
    depositedAmount: "number",
    withdrawnAmount: "number",
    netAmount: "number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

import { String } from "@blockflow-labs/utils";

export interface ITransfer extends Document {
  id: String;
  from_address: string;
  to_address: string;
  token_address: string;
  token_name: string;
  token_symbol: string;
  raw_amount: Number;
  raw_amount_str: string;
  amount: Number;
  amount_str: string;
  usd_amount: Number;
  usd_exchange_rate: string;
  transfer_type: string;
  transaction_from_address: string;
  transaction_to_address: string;
  transaction_hash: string;
  log_index: string;
  block_timestamp: string;
  block_hash: string;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

export interface IBalance extends Document {
  id: String;
  address: string;
  token_address: string;
  token_name: string;
  token_symbol: string;
  balance: string;
  raw_balance: string;
  usd_amount: string;
  usd_exchange_rate: string;
  block_timestamp: string;
  block_hash: string;
  is_past_holder: Boolean;
  is_holder: Boolean;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

export interface IToken extends Document {
  id: String;
  address: string;
  decimals: string;
  name: string;
  symbol: string;
  holder_count: string;
  burn_event_count: string;
  mint_event_count: string;
  transfer_event_count: string;
  total_supply: string;
  total_burned: string;
  total_minted: string;
  total_transferred: string;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

export interface IBridgeLimitsSet extends Document {
  id: String;
  mintingLimit: Number;
  burningLimit: Number;
  bridge: string;
  block_timestamp: string;
  block_hash: string;
  block_number: string;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

export interface ILockBoxSet extends Document {
  id: String;
  lockboxaddress: string;
  block_timestamp: string;
  block_hash: string;
  block_number: string;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

export interface ILockBoxData extends Document {
  id: String;
  lockboxaddress: string;
  senderAccount: string;
  depositedAmount: number;
  withdrawnAmount: number;
  netAmount: number;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { Document } from "@blockflow-labs/utils";

export class Staker {
  static entity = "Staker";
  static schema = {
    id: { type: "String", index: true },
    address: "String",
    operator: "String",
    shares: [{ strategy: "String", shares: "String" }],
    createdAt: "Number",
    updatedAt: "Number",
    createdAtBlock: "Number",
    updatedAtBlock: "Number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

export class Operator {
  static entity = "Operator";
  static schema = {
    id: { type: "String", index: true },
    address: "String",
    avsRegistrations: [{ address: "String", isActive: "Boolean" }],
    metadataURI: "String",
    shares: [{ strategy: "String", shares: "String" }],
    createdAt: "Number",
    updatedAt: "Number",
    createdAtBlock: "Number",
    updatedAtBlock: "Number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

export class AVS {
  static entity = "AVS";
  static schema = {
    id: { type: "String", index: true },
    address: "String",
    metadataURI: "String",
    operators: ["String"],
    createdAt: "Number",
    updatedAt: "Number",
    createdAtBlock: "Number",
    updatedAtBlock: "Number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

export class Withdrawal {
  static entity = "Withdrawal";
  static schema = {
    id: { type: "String", index: true },
    withdrawalRoot: "String",
    nonce: "Number",
    stakerAddress: "String",
    delegatedTo: "String",
    withdrawerAddress: "String",
    strategyShares: [{ strategy: "String", shares: "String" }],
    isCompleted: "Boolean",
    createdAt: "Number",
    createdAtBlock: "Number",
    updatedAt: "Number",
    updatedAtBlock: "Number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

export class Deposit {
  static entity = "Deposit";
  static schema = {
    id: { type: "String", index: true },
    transactionHash: "String",
    stakerAddress: "String",
    tokenAddress: "String",
    strategyAddress: "String",
    shares: "String",
    createdAt: "Number",
    createdAtBlock: "Number",
    entityId: { type: "String", index: true },
    blocknumber: { type: "Number", index: true },
    chainId: { type: "String", index: true },
    instanceId: { type: "String", index: true },
  };
}

import { String } from "@blockflow-labs/utils";

export type StrategyShares = {
  strategy: String;
  shares: String;
};

export type AVSRegistrations = {
  address: String;
  isActive: Boolean;
};

export interface IStaker extends Document {
  id: String;
  address: String;
  operator: String;
  shares: [StrategyShares];
  createdAt: Number;
  updatedAt: Number;
  createdAtBlock: Number;
  updatedAtBlock: Number;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

export interface IOperator extends Document {
  id: String;
  address: String;
  avsRegistrations: [AVSRegistrations];
  metadataURI: String;
  shares: [StrategyShares];
  createdAt: Number;
  updatedAt: Number;
  createdAtBlock: Number;
  updatedAtBlock: Number;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

export interface IAVS extends Document {
  id: String;
  address: String;
  metadataURI: String;
  operators: [String];
  createdAt: Number;
  updatedAt: Number;
  createdAtBlock: Number;
  updatedAtBlock: Number;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

export interface IWithdrawal extends Document {
  id: String;
  withdrawalRoot: String;
  nonce: Number;
  stakerAddress: String;
  delegatedTo: String;
  withdrawerAddress: String;
  strategyShares: [StrategyShares];
  isCompleted: Boolean;
  createdAt: Number;
  createdAtBlock: Number;
  updatedAt: Number;
  updatedAtBlock: Number;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}

export interface IDeposit extends Document {
  id: String;
  transactionHash: String;
  stakerAddress: String;
  tokenAddress: String;
  strategyAddress: String;
  shares: String;
  createdAt: Number;
  createdAtBlock: Number;
  blocknumber: String;
  entityId: String;
  instanceId: String;
  chainId: String;
}
